#version 450

#define NOISE_SET 2
#include "include/noise.glsl"

layout (set = 0, binding = 0, r32f) uniform image2D elevation_normal_texture;

layout(set=1, binding=0) uniform ComputeData {
    float u_sea_level;
    float u_horizontal_scale;
    float u_vertical_scale;
    uint u_size;
    uint u_octaves;
    uint u_current_stage;
    uint u_stage_count;
};

float read_elevation(ivec2 xz, ivec2 offset) {
    // if (xz < 0 || xz >= u_size ||
    //     xz < 0 || xz >= u_size) {
    //     return get_elevation(vec2(v.x + offset.x, v.z + offset.y), u_sea_level, u_horizontal_scale, u_vertical_scale, u_octaves);
    // }

    return imageLoad(elevation_normal_texture, ivec2(xz + offset)).r;
}

void main() {
    ivec2 xz = ivec2(gl_GlobalInvocationID.xy);
    vec4 elevation_normal = imageLoad(elevation_normal_texture, ivec2(xz));

    vec3 norm = normalize(vec3(
        read_elevation(xz, ivec2(-1, 0)) - read_elevation(xz, ivec2(1, 0)),
        2.0,
        read_elevation(xz, ivec2(0, -1)) - read_elevation(xz, ivec2(0, 1))
    ));

    imageStore(elevation_normal_texture, xz, vec4(elevation_normal.x, norm));
}
